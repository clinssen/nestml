{%- if variable_symbol.is_inline_expression and not utils.contains_convolve_call(variable_symbol) %}
inline {{ declarations.print_variable_type(variable_symbol) }} {{ variable_getter_printer.print(variable) }}() const
{
    return {{ printer.print_expression(variable_symbol.get_declaring_expression()) }};
}
{%- else %}
inline {{ declarations.print_variable_type(variable_symbol) }} {{ variable_getter_printer.print(variable) }}() const
{
    return {{ utils.print_symbol_origin(variable_symbol) }}{{ printer.print(variable) }};
}

inline void {{ variable_setter_printer.print(variable) }}(const {{ declarations.print_variable_type(variable_symbol) }} __v)
{
    {{ utils.print_symbol_origin(variable_symbol) }}{{ printer.print(variable) }} = __v;
}
{%- endif %}