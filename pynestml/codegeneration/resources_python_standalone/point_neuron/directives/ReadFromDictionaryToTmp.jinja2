{#
  Generates a code snippet that retrieves a data from dictionary and sets it the the model variable.
  @param variable VariableSymbol
#}
{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
{%- if not variable.is_inline_expression and not variable.is_state() %}
{{declarations.print_variable_type(variable)}} tmp_{{ printer.print(utils.get_variable_by_name(astnode, variable)}} = get_{{printer.print(variable) }}();
updateValue<{{declarations.print_variable_type(variable)}}>(__d, nest::{{names_namespace}}::_{{ printer.print(utils.get_variable_by_name(astnode, variable)}}, tmp_{{ printer.print(utils.get_variable_by_name(astnode, variable)}});
{%- if vector_symbols|length > 0 %}
// Resize vectors
if (tmp_{{ printer.print(utils.get_variable_by_name(astnode, variable)}} != get_{{ printer.print(variable) }}())
{
{%- for vector_var in vector_symbols %}
{%- if vector_var.get_vector_parameter() == variable.get_symbol_name() %}
  {{ declarations.print_variable_type(vector_var) }} _tmp_{{ printer.print(utils.get_variable_by_name(astnode, vector_var)}} = get_{{ printer.print(vector_var) }}();
  _tmp_{{ printer.print(utils.get_variable_by_name(astnode, vector_var)}}.resize(tmp_{{ printer.print(utils.get_variable_by_name(astnode, variable)}}, 0.);
  set_{{ printer.print(utils.get_variable_by_name(astnode, vector_var)}}(_tmp_{{ printer.print(utils.get_variable_by_name(astnode, vector_var)}});
{%- endif %}
{%- endfor %}
}
{%- endif %}
{%- elif not variable.is_inline_expression and variable.is_state() %}
{{declarations.print_variable_type(variable)}} tmp_{{names.convert_to_cpp_name(variable.get_symbol_name())}} = get_{{ printers.print(variable) }}();
updateValue<{{declarations.print_variable_type(variable)}}>(__d, nest::{{names_namespace}}::_{{variable.get_symbol_name()}}, tmp_{{names.convert_to_cpp_name(variable.get_symbol_name())}});
{%- else %}
  // ignores '{{ printer.print(utils.get_variable_by_name(astnode, variable)}}' {{declarations.print_variable_type(variable)}}' since it is an function and setter isn't defined
{%- endif %}
