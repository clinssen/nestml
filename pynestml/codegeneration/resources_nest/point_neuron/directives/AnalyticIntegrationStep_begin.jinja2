{#
  Generates a series of C++ statements which perform one integration step of all ODEs that are solved by the analytic integrator.
#}
{%- if tracing %}/* generated by {{self._TemplateReference__context.name}} */ {% endif %}
{%- if uses_analytic_solver %}
{%-     for variable_name in analytic_state_variables_: %}
{%-         set update_expr = update_expressions[variable_name] %}
{%-         if use_gap_junctions %}
double {{variable_name}}__tmp = {{ printer.print_expression(update_expr)|replace("B_." + gap_junction_port + "_grid_sum_", "(B_." + gap_junction_port + "_grid_sum_ + __I_gap)") }};
{%-         else %}
double {{variable_name}}__tmp = {{ printer.print_expression(update_expr) }};
{%-         endif %}
{%-     endfor %}
{%- endif %}
