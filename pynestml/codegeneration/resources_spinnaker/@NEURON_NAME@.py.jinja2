/*
 *  {{neuronName}}.py
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  Generated from NESTML at time: {{now}}
**/

from spynnaker.pyNN.models.neuron import AbstractPyNNNeuronModel
from spynnaker.pyNN.models.defaults import default_parameters
from python_models8.neuron.implementations.{{neuronName}}_impl import {{neuronName}}Impl


class {{neuronName}}(AbstractPyNNNeuronModel):

    @default_parameters({"threshold"})
    def __init__(self, 
# XXX: need to print default values here?
{%- for sym in neuron.get_state_symbols() %}
                 {{sym.get_symbol_name()}}
{%- endfor %}

{%- for sym in neuron.get_parameter_symbols() %}
                 {{sym.get_symbol_name()}}
{%- endfor %}

{%- for sym in neuron.get_spike_input_ports() %}
                 {{sym.get_symbol_name()}}
{%- endfor %}
                ):
        # .. compute propagators ...
        super().__init__({{neuronName}}Impl(
{%- for sym in neuron.get_state_symbols() %}
                 {{sym.get_symbol_name()}}
{%- endfor %}

{%- for sym in neuron.get_parameter_symbols() %}
                 {{sym.get_symbol_name()}}
{%- endfor %}

{%- for sym in neuron.get_spike_input_ports() %}
                 {{sym.get_symbol_name()}}
{%- endfor %}

       # ... pass internal variables ...
                                           ))
